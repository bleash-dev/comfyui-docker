name: Build and Deploy ComfyUI Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: comfyui-docker
  PUBLIC_REGISTRY_ALIAS: viralcommunity  # e.g., 'abc123xyz' from public.ecr.aws/<alias>

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.GH_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Amazon ECR Public
      uses: docker/login-action@v3
      with:
        registry: public.ecr.aws

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: public.ecr.aws/${{ env.PUBLIC_REGISTRY_ALIAS }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,prefix=main-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image to ECR Public
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          PYTHON_VERSION=3.10
          PYTORCH_VERSION=2.4.0
          COMFYUI_VERSION=master

    - name: Update RunPod Template
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      env:
        RUNPOD_API_KEY: ${{ secrets.RUN_POD_TOKEN }}
        RUNPOD_TEMPLATE_ID: ${{ secrets.THIS_POD_TEMPLATE_ID }}
        DOCKER_IMAGE_TAG: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
      run: |
        chmod +x ./scripts/update_runpod_template.sh
        ./scripts/update_runpod_template.sh

    - name: Deployment Summary
      if: github.event_name != 'pull_request'
      run: |
        echo "## ðŸš€ Docker Image Deployed to Amazon ECR Public" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`public.ecr.aws/${{ env.PUBLIC_REGISTRY_ALIAS }}/${{ env.IMAGE_NAME }}:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "You can use this image in RunPod **without any authentication**." >> $GITHUB_STEP_SUMMARY